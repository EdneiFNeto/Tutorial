<?php


    class Database
    {
        /*Método construtor do banco de dados*/
        //private function __construct(){}

        private function __clone(){}

        /*Método que destroi a conexão com banco de dados e remove da memória todas as variáveis setadas*/
        public function __destruct() 
        {
            $this->disconnect();
            foreach ($this as $key => $value) {
                unset($this->$key);
            }
        }

        private static $dbtype   = "mysql";
        private static $host     = "localhost";
        private static $port     = "3306";
        private static $user     = "root";
        private static $password = "";
        private static $db       = "api";
        //sprivate static $conexao;

        private function getDBType()  {return self::$dbtype;}
        private function getHost()    {return self::$host;}
        private function getPort()    {return self::$port;}
        private function getUser()    {return self::$user;}
        private function getPassword(){return self::$password;}
        private function getDB()      {return self::$db;}
        

        public function connect(){
            try
            {
                $this->conexao = new PDO("mysql:host=".$this->getHost().";dbname=".$this->getDB(),  $this->getUser(), $this->getPassword());
            }
            catch (PDOException $i)
            {
                die("Erro: <code>" . $i->getMessage() . "</code>");
            }
             
            return ($this->conexao);
        }
         
        public function disconnect(){
            $this->conexao = null;
        }

        public function insert($sql, $param=null)
        {
            try{
                $query = $this->connect()->prepare($sql);
                if($query->execute($param)){
                    $data[] = array('msg'=>'Dados inseridos com sucesso!');
                    return json_encode($data);
                }else{
                    $data[] = array('msg'=>'Erro ao inserir');
                    return json_encode($data); 
                }
                
            }
            catch(PDOException $ex)
            {
                $data[] = array('msg'=>"Error insert ".$ex->getMessage());
                return json_encode($data); 
            }
           
        }

        public function select($sql, $param=null)
        {
            $query  = $this->connect()->prepare($sql);

            if($query->execute($param))
            {
                while($row = $query->fetch()){
                    $data[] = array('id'=> $row['id'], 'nome'=>$row['nome'], 'email'=>$row['email']);
                }
                return json_encode($data);
            }
        }

        public function delete($sql, $param=null)
        {
            try
            {
                $data   = array();
                $query = $this->connect()->prepare($sql);
                if($query->execute($param))
                {
                    $data[] = array('msg'=>'Dados excluidos com sucesso !');
                    return json_encode($data);
                }
                else
                {
                    $data[] = array('msg'=>'Error ao deletar ');
                    return json_encode($data);
                }
            }
            catch(PDOException $ex)
            {
                echo "Error - ".$ex->getMessage();
            }
        }

        public function update($sql, $param=null)
        {
            try
            {
                $query = $this->connect()->prepare($sql);
                if($query->execute($param))
                {
                    $data[] = array('msg'=>'Update realizado com sucesso !');
                    return json_encode($data);
                }
                else
                {
                    $data[] = array('msg'=>'Error update !');
                    return json_encode($data);
                }
            }
            catch(PDOException $ex)
            {
                $data[] = array('msg'=>'Error - '.$ex->getMessage());
                return json_encode($data);
            }
        }
    }

    $database = new Database();

    $sql     = "INSERT INTO usuario (nome, email, pass) VALUES (:nome, :email, :pass)";
    $sql1    = "SELECT * FROM usuario ";
    $sql2    = "DELETE FROM usuario WHERE id = :id";
    $sql3    = "UPDATE usuario SET nome =:nome, email=:email, pass= :pass WHERE id =:id";
    
    $param   = array('nome'=>'ednei-2', 'email'=>'ed@gmail.com', 'pass'=>'123');
    $param1  = array('nome'=>'ednei-2', 'email'=>'ed@gmail.com', 'pass'=>'123');
    $param2  = array('id' => '5');
    $param3  = array('nome'=>'novo-xxx', 'email'=>'ed@gmail.com', 'pass'=>'123', 'id' => '1');

    echo "<br>====================== INSERT ======================<br>";
    $data = $database->insert($sql, $param);
    echo $data;
    echo "<br>";
     
    echo "<br>====================== DELETE ======================<br>";
    $data2   = $database->delete($sql2, $param2);
    echo $data2;
    echo "<br>";
    
    echo "<br>====================== UPDATE ======================<br>";
    $data3   = $database->update($sql3, $param3);
    echo $data3;
    echo "<br>";

    echo "<br>====================== SELECT ======================<br>";
    $data1 = $database->select($sql1, null);
    echo $data1;
    echo "<br>";

?>
