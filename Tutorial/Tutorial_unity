


//=======================================================================
//GAME OBJECT
//=======================================================================
//ALT + MOVER CAMERA
//=======================================================================
//ALT + BOTAO MEIO [MAOZINHA]
//=======================================================================
//ALT + BOTAO BOTAO DIREITO [LUPA]
//=======================================================================
//SELECIONAR OBJETO TECLA F DAR FOCO[APROXIMACAO]
//=======================================================================


//=======================================================================
//MATERIAL
//=======================================================================
//BOTAO DIREITO EMPROJETOS CREATE-->MATERIAL
//ARRASTAR MATERIAL PARA OBJETO NA CENA
//COLOCAR IMAGEM NO MATERIAL BASTA ARRASTARA IMAGEM PARA ALBEDO DO MATERIAL

//=======================================================================
//PREFABS
//AGRUPA TODOS OS OBJETOS DENTRO 
//=======================================================================
//ARRASTAR O OBJETO PARA AERA DE PROJECTS

//=======================================================================
//FISICA
//=======================================================================
//CLICAR NO OBJETO--> ADD COMPONEBT--> RIDGIBODY
//AO DAR O PLAY SE O OBJETO ESTIVER NO ALTO ELE VAI CAIR

//=======================================================================
//ANIMACAO KEY FRAME
//=======================================================================
//WUNDIWN-->ANIMATION
//ADD CREATE --> NOMEAR -->  -->ADD PROPERTY-->POSITION --> CLICAR NO BOTAO RED

//=======================================================================
//PARTICULAS
//=======================================================================
//GAME OBJECT -->PARTICULE SYSTEM
//GRAVI MODIFY = MUDA POCISAO DA PARTICULA, TIPO CRIAR UMA CHUVA, FOGO


//=======================================================================
//CAMERA JOGADOR
//=======================================================================
//IMPORT CAMERA--> DELETE CAMERA --> ADD MULT PURSE CAMERA READ
//OPCAO AUTO CAM-->TARGE-->ADD OBJECT[QUANDO MOVER OBJETO CAMERA ACOMPANHA]
//=======================================================================


//=======================================================================
//CAMERA RIG
//=======================================================================
//PORETEGE O JOGADOR QUANDO ENCONSTAR NA PAREDE, ONDE O PAREDE NAO PARECE
//QUANDO O JOGADOR ENCOSTA

//=======================================================================
//FPS - CPONTROLLER[CONTROLE DE 1 PESSSOA]
//ADD CONTRLLEAO SENA
//=======================================================================


//=======================================================================
//THRIND PERSON CONTROLLER
//[PREFABS] PERSONAGEM PRONTO
//=======================================================================

//=======================================================================
//SIMULCAO DE TECISO - CLOTH
//=======================================================================

//=======================================================================
//MODEOS .FBX
//=======================================================================

//===============================================================
//JOGOS 2D
//===============================================================
//ORDEN LKAYER: Z-INDEX [POCISAO DO OBJERTO SOBRE PO OUTRO]
//PHISICA --> ADD COMPONENBT-->PHISICA 2D -->
//-COLISOR CIRCULAR;
//-RIGHTBODY
//===============================================================
//ADD COLISOR NO CAMPO
//AO ADIC=CIONAR UMA COLISAO O OBJETTO PARA NO LOCAL
//EX: UMA CAIXA CAI NO CHAO, O CHAO ESTA COM BOX COLIDER[CRIA UM CHAO PARA ACAIXA PARAR]
//===============================================================
//--PHISIC 2D--> BOX COLIDER
//PROPERTY BOX COLIDER
//-OFFSET X & Y: [ALTURA DO COLISOR]
//SIZE : TAMANHO 
//===============================================================
//PARTICULAS
//CREATE PARTICLE SYSTEM
//CRIA MATERIAL--> ADD IMAGEM AOA MATERIAL
//ARRASTAR MATERIAL PARA CIMA DA PARTICULA


//=======================================================================
//JOGO DA BOLINHA
//=======================================================================
//CRIAR CAMPO
//CRIAR BOLA
//ADD MATERIAL AO CAMPO E A BOLA
//CRIAR SCRIPT
//ADD FISICA A BOLA[rigidbody]
//=======================================================================
//SCRIPT - MOVER BOLA
//ADD SCRIPT NA BOLA [ ADD COMPONENT-->NEW SCRIPT]
//=======================================================================
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Bolinha : MonoBehaviour {

	private Rigidbody rb;
	public float veloc=5;
	// Use this for initialization
	void Start () {

		rb = GetComponent<Rigidbody>();
	}

	//evento chamada antes do update
	void FixedUpdate(){

		Vector3 move = new Vector3(Input.GetAxis("Horizontal"), 0, Input.GetAxis("Vertical"));
		rb.AddForce(move*veloc);
	}

	// Update is called once per frame
	void Update () {
	}
}
//=======================================================================
//MOVER BOLINHA E CAMNERA JUNTO
//=======================================================================
//ADD SCRIPT A CAMERA
//=======================================================================
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MoveCamera : MonoBehaviour {

	public GameObject gameObject;
	private Vector3 pocisaoInicial;

	void Start () {

		pocisaoInicial = transform.position; 
         //pocisaoInicial = transform.position - gameObject.transform.position; 
	}
	
	void LateUpdate() {
		transform.position = gameObject.transform.position + pocisaoInicial;
	}
}


//=======================================================================
//NO CAMPO MOVE CAMERA (SCRIPT) LADO DIRETO [INPECTOR]:
//ARRANTAR O BOLINHA PARA DENTRO DA OPCAO GAMEOBJECT   
//=======================================================================

//=======================================================================
//CRIAR ITEM 
//=======================================================================
//CRIAR SCRIPT

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MoveItem : MonoBehaviour {

	void Start () {
		
	}
	
	void Update () {

		transform.Rotate(new Vector3(15, 30, 45) * Time.deltaTime);
	}
}

//=======================================================================
//CRIAR PREFABS [PARA ITEM]
//=======================================================================

//1 - ARRASTAR PARA PASTA DE ASSETS
//2 - RENOMEAR [ITEM CUBO]
//3 - ADD EFEECT HELLO M

//=======================================================================
//COLETAR ITEM
//=======================================================================
//ADD CAMPO NO SCRIPT MOVER BOLINHA
//evento de colisao
private void OnTriggerEnter(Collider outro)
{
	Destroy(outro.gameObject);
}

//=======================================================================
//HABILITAR TRIGER NA PROPRIEDADE BOX COLIDER DO CUBO
//EX: IS TRIGGER = TRUE[HABILITAR CHEKBOX]
//DENTRO DO INSPECTOR DO CUBO ADD TAG
//EXEMPLE TAG = ITEM
//=======================================================================
//VERIFICAR SE A TEG EXISTE PAR PODER DESTRIUR OBJETO
//evento de colisao
//ATUALIZAR SCRIPT MOVER BOLINHA
//=======================================================================
private void OnTriggerEnter(Collider outro)
{
	if (outro.gameObject.CompareTag("Item"))
	{
		Destroy(outro.gameObject);
	}
}

//=======================================================================
//EFEITOS DE PARTICULAS
//=======================================================================
//ADD PÁRTICULE SYSTEM
//PRPOPERTY:
//TRNASFORM : REST
//SHAPE: 
//	-SHAPE
// 	-RADIUS: 0.01
//LOOPING : FALSE 
//DURATION: 0.49
//START LIFETIME: 0.86
//START DEPLAY: 0.9
//START SPEED: 1.27
//START SIZE: 0.99
//DURATION: 0.49
//=======================================================================
//TRANSFORMA A PÁRTICULKA EM PREFABS
//ARRASTAR PARA A PASTA DE ASSETS
//RENOMEAR [Particula item]
//=======================================================================
//NOVO SCRIPT MOVER BOLINHA
//=======================================================================
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MoveBolinha : MonoBehaviour {
	private Rigidbody rb;
	public float velocidade = 10;
    public GameObject particulaItem;//refenencia prefab párticula

    // Use this for initialization

    void Start()
    {
    	rb = GetComponent<Rigidbody>();
    }

    // Update is called once per frame
    void FixedUpdate()
    {
    	Vector3 move = new Vector3(Input.GetAxis("Horizontal"), 0, Input.GetAxis("Vertical"));
    	rb.AddForce(move * velocidade);
    }

    //evento de colisao
    private void OnTriggerEnter(Collider outro)
    {
    	if (outro.gameObject.CompareTag("Item"))
    	{
    		Destroy(outro.gameObject);
    	}

    }
}

//=======================================================================
//ASSOCIA PERTICULA A BOLINHA
//=======================================================================
//ADD PARTUCLUA NA PROPRIEDADE DE SCRIPT NO INPECTOR DO SHAPE[BOLINHA]
//ARRASTAR PARTICULAS PARA DENTRO DA PROPRIEDADE GAME OBJECT 


//ATUALIZAR EVENTO DE COLISAO [SCRIPT MOVER BOLINHA]
private void OnTriggerEnter(Collider outro)
{
	if (outro.gameObject.CompareTag("Item"))
	{
            //exiobe particula antres de destruir iobjet
		Instantiate(particulaItem, outro.gameObject.transform.position, Quaternion.identity);
		Destroy(outro.gameObject);
	}
}

//=======================================================================
//APOAGAR PREFAB DA PARTICULA APOS SER CRIADO
//ADD SCRIPT AO PREFABS DA PARTICULA
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DestroyObject : MonoBehaviour {

	// Use this for initialization
	void Start () {
        Invoke("ApagaObjeto", 1.5f);//INVOCA O METHODO APOS CRIAR A PARTICULA
	}
	
    //destroi o mesmo objeto[a particula]
    void ApagaObjeto()
    {
    	//DESTRY A PARTICULA
        Destroy(this.gameObject);
    }
}

//=======================================================================
//EFEITOS DE RASTRO
//=======================================================================
//SELECIONA A BOLINHA --> ADD COMPONENTO--> EFEITOS

//=======================================================================
//PONTUAÇÃO
//=======================================================================
//GAME OBJECT --> UI-->TEXT

//=======================================================================
//FIM GAME
//=======================================================================


//=======================================================================
//--------------------------- JOGO AVIAO ------------------------------//
//=======================================================================

//ADD IMAGEM 
//ADD PHISIC 2D:
//	-ADD RIGIBODY
//	-DENTRO DO RIGIBODY MARCAR KINEMATIC[CAMNPO NAO CAI COIM A GRAVIDADE]
//RENOMEAR AIMAGEM [IMAGEMFUNDOA]
//CRIAR OUTRA IMAGEM [IMAGEMFUNDOB]

//=======================================================================
//ADD SCRIPT
//=======================================================================
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MoveFundo : MonoBehaviour {

  
    private float larguraTela;

    void Start () {

        SpriteRenderer grafico = GetComponent<SpriteRenderer>();

        float larguraImage = grafico.sprite.bounds.size.x;
        float alturaImage = grafico.sprite.bounds.size.y;

        float alturaTela = Camera.main.orthographicSize * 2f;//recebe a canmera de frente
        larguraTela = alturaTela/Screen.height * Screen.width;//largura da tela

        //converte valor
        Vector2 novoEscala = transform.localScale;
        novoEscala.x = larguraTela / larguraImage + 0.25f;
        novoEscala.y = alturaTela / alturaImage;
        this.transform.localScale = novoEscala;

        if (this.name == "imagemFundoB")
        {
            //reposiciona a imagem
            transform.position = new Vector2(larguraTela, 0f);
        }

        //anima o fundo para esquerda
        GetComponent<Rigidbody2D>().velocity = new Vector2(-3, 0);
    }
	
	// Update is called once per frame
	void Update () {
		
        if(transform.position.x <= -larguraTela)
        {
            transform.position = new Vector2(larguraTela, 0f);
        }
	}
}

 
//=======================================================================
//ADD PERSONAGEM AO PALCO
//=======================================================================
//IMPORTA TODOS OS SPRITES DO JOGADOR
//ADD RIGITBODY--> ATIVAR OPCAO isKinematic 
//ADD CIRCLE COLISE
//ADD SCRIPT

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ControlaJogador : MonoBehaviour {

    bool comecou;
    bool acabou;
    Rigidbody2D corpoJoigador;
    Vector2 forcaInpulso = new Vector2(0, 500); //x, y
    public GameObject particulaPena;


	// Use this for initialization
	void Start () {

        corpoJoigador = GetComponent<Rigidbody2D>();
        corpoJoigador.gravityScale = 2.00f;
    }
	
	// Update is called once per frame
	void Update () {

        //evento  touch ou click
        if (Input.GetButtonDown("Fire1"))
        {
            if (!comecou)
            {
                comecou = true;
                corpoJoigador.isKinematic = false; //habilita a graviudade
                
            }

            //zera avelocidade
            corpoJoigador.velocity = new Vector2(0, 0);
            corpoJoigador.AddForce(forcaInpulso);

            //Instacia pena
            GameObject peninhas = Instantiate(particulaPena);
            //add posicao junto ao jogador
            peninhas.transform.position = this.transform.position;

        }

        float alturaFelpudoEmPixel = Camera.main.WorldToScreenPoint(transform.position).y;

        if(alturaFelpudoEmPixel > Screen.height || alturaFelpudoEmPixel< 0)
        {
            Destroy(this.gameObject);
        }

        //Enpinar porsonagem
        transform.rotation = Quaternion.Euler(0, 0, corpoJoigador.velocity.y*3); 
	}
}


//=======================================================================
//ADD PARTICULA PENHINHA[ PARTICA SERVE PARA QUNADO]
//=======================================================================
//CRIAR GAME EMPTY
//ADD PARTICULA
//CRIAR MATERIAL
//ADD IMAGEM AO MATERIAL [ALBEDO]
//ADD MATERIAL A PARTICULA 
//TORNAR OBJETO DA ÁRTICULA UM PREFABS [ ARRASTAR PARA PASTA ASSETS]
//DELETAR OBJETO PARTICULA DA SENA
//ADD OBJETO PARTICULA AO SCRIPT JOGADOR 
//[CAMPO GAMEOBJECT PRECISAR SER DEFINIDO NO SCRIPT EX: PUBLIC GAMEOBJECT GAME]

//=======================================================================
//DESTROY PREFABS PARTICULA
//ADD SCRIPT A PARTICUAL
//=======================================================================
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DestroyPeninhas : MonoBehaviour {

    // Use this for initialization
    void Start()
    {
        Invoke("ApagaObjeto", 1.5f);//INVOCA O METHODO APOS CRIAR A PARTICULA
    }

    //destroi o mesmo objeto[a particula]
    void ApagaObjeto()
    {
        //DESTRY A PARTICULA
        Destroy(this.gameObject);
    }
}


//=======================================================================
//CRIAR INIMIGO
//=======================================================================
//ADD SPRITES INIMIGO NA SENA
//ADD CIRCLE1 COLIDER [REDIMENCIONAR PARA AREA DO BALAO]
//ADD CIRCLE2 COLIDER [REDIMENCIONAR PARA AREA DO CORPO]
//ADD BOX COLIDER [REDIMENCIONAR PARA AREA DO ARMA]
//TORNAR INIMIGO MUM PREFABS
//DELETAR INIMIGO DA CENA
//ADD SCRIPT AO INIMIFGO PARA ELE SE MOVER PARA FRENTE
//=======================================================================

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class inimigo : MonoBehaviour {

	// Use this for initialization
	void Start () {

        GetComponent<Rigidbody2D>().velocity = new Vector2(-2, 0);//empurrar o inimigo para frente
	}
	
	// Update is called once per frame
	void Update () {
		
	}
}


//=======================================================================
//SCRIPT PARA INTERACAO COM A SENA
//=======================================================================
//ADD SCRIPT A CAMERA

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//criar os inimigos na sena
public class GameEngine_ : MonoBehaviour {

    public GameObject inimigo;

	// Use this for initialization
	void Start () {

        InvokeRepeating("criarInimigo", 1.0f, 1.5f);
	}
	
	// Update is called once per frame
	void Update () {
		
	}

    void criarInimigo()
    {
        float altturaAleatioria = 10.0f * Random.value - 5;
        GameObject novoInimigo = Instantiate(inimigo);
        novoInimigo.transform.position = new Vector2(15.0f, altturaAleatioria);
    }
}

//=======================================================================
//DESTROI INIMIGO APS SAIR DA TELA
//=======================================================================

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class inimigo : MonoBehaviour {


	// Use this for initialization
	void Start () {

        GetComponent<Rigidbody2D>().velocity = new Vector2(-4, 0);//empurrar o inimigo para frente
	}
	
	// Update is called once per frame
	void Update () {
		
		//destoi inimigo apos sair da tela
        if(transform.position.x < -25)
        {
            Destroy(this.gameObject);
        }
	}
}

//ADD INIMIGO AO SCRIPT DA CAMERA[ARRASTAR INIMIGO PARA DENTRO DO SCRIPT DA CAMERA]

//=======================================================================
//COLISAO DO JOIGADOR COM INIMIGO
//ATUALIZAR SCRIPT JOGADOR
//=======================================================================

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ControlaJogador : MonoBehaviour {

    bool comecou;
    bool acabou;
    Rigidbody2D corpoJoigador;
    Vector2 forcaInpulso = new Vector2(0, 500); //x, y
    public GameObject particulaPena;


	// Use this for initialization
	void Start () {

        corpoJoigador = GetComponent<Rigidbody2D>();
        corpoJoigador.gravityScale = 2.00f;
    }
	
	// Update is called once per frame
	void Update () {

        if (!acabou)
        {
            //evento  touch ou click
            if (Input.GetButtonDown("Fire1"))
            {
                if (!comecou)
                {
                    comecou = true;
                    corpoJoigador.isKinematic = false; //habilita a graviudade

                }

                //zera avelocidade
                corpoJoigador.velocity = new Vector2(0, 0);
                corpoJoigador.AddForce(forcaInpulso);

                //Instacia pena
                GameObject peninhas = Instantiate(particulaPena);
                Vector3 pocisaoFeupudo = this.transform.position + new Vector3(0, 10, 0);//posicionar particula ao centro
                peninhas.transform.position = this.transform.position; //add posicao junto ao jogador

            }

            float alturaFelpudoEmPixel = Camera.main.WorldToScreenPoint(transform.position).y;
            if (alturaFelpudoEmPixel > Screen.height || alturaFelpudoEmPixel < 0)
            {
                //Destroy(this.gameObject);
                efeitColisao();
            }

            //Enpinar porsonagem
            transform.rotation = Quaternion.Euler(0, 0, corpoJoigador.velocity.y * 3);
        }
        
	}

    //envto de colisao
    void OnCollisionEnter2D(Collision2D collision)
    {
        if (!acabou)
        {
            efeitColisao();

        }
    }

    void efeitColisao()
    {
        acabou = true;
        GetComponent<Collider2D>().enabled = false;//desliga colisor
        GetComponent<Rigidbody2D>().velocity = Vector2.zero;//velocidade = 0 
        GetComponent<Rigidbody2D>().AddForce(new Vector2(-300, 0));//Girar 
        GetComponent<Rigidbody2D>().AddTorque(300f);//Girar 

        GetComponent<SpriteRenderer>().color = new Color(1.0f, 0.75f, 0.75f);//mudar a cor
    }
}

//=======================================================================
//MARCAR PONTO
//=======================================================================
//ATUALIZAR SCRIPT INIMIGO
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class inimigo : MonoBehaviour {
    GameObject jogador;
    bool marcouPonto;

	// Use this for initialization
	void Start () {

        GetComponent<Rigidbody2D>().velocity = new Vector2(-4, 0);//empurrar o inimigo para frente
        jogador = GameObject.FindGameObjectWithTag("Player");

    }
	
	// Update is called once per frame
	void Update () {
		
        if(transform.position.x < -25)
        {
            Destroy(this.gameObject);
        }
        else
        {

            //verifica se a pocisao do jogador e menor que a do inimigo
            if(transform.position.x < jogador.transform.position.x)
            {
                if (!marcouPonto)
                {
                    marcouPonto = true;
                    //velocidade aulmenta & inimigo spbe
                    GetComponent<Rigidbody2D>().velocity = new Vector2(-7.5f, 5.0f);
                    GetComponent<Rigidbody2D>().isKinematic=false;//girar o inimigo
                    GetComponent<Rigidbody2D>().AddTorque(50f);
                    GetComponent<SpriteRenderer>().color = new Color(1.0f, 0.75f, 0.75f);//mudar a cor do inimigo
                }
                
            }
        }
	}
}


//ADD TAG AO JOGADOR--> INPECTOR-->TAG-->PROPCURAR POR[Palyer]
//OBS: O MESMO NOME DGAME OBJECT INSTANCIADO:
//EX: jogador = GameObject.FindGameObjectWithTag("Player");

//=======================================================================
//CRIAR PONTUACAO
//=======================================================================
//CRIAR TEXT-->GAMEOBJECT -->UI-->TEXT
//ADD FONT
//ATUALIZAR SCRIPT JOGADOR
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class ControlaJogador : MonoBehaviour {

    bool comecou;
    bool acabou;
    Rigidbody2D corpoJoigador;
    Vector2 forcaInpulso = new Vector2(0, 500); //x, y
    public GameObject particulaPena;
    public Text textScore;


	// Use this for initialization
	void Start () {
        
        //ADD NOVOS CODIGO
        textScore.transform.position = new Vector2(Screen.width/ 2, Screen.height - 100);//POCISAO TITULO
        textScore.text= "Toque para iniciar";
        textScore.fontSize = 35;
    }

    // Update is called once per frame
	void Update () {

        if (!acabou)
        {
            //evento  touch ou click
            if (Input.GetButtonDown("Fire1"))
            {
                if (!comecou)
                {
                    comecou = true;
                    corpoJoigador.isKinematic = false; //habilita a graviudade

                   //ADD LINHA DE CODIGO
                    textScore.text = pontuacao.ToString();
                   
                }
    }

    //ADD FUNCAO
    void MarcarPonto()
    {
        pontuacao++;
        textScore.text = pontuacao.ToString();
    }
}

//=======================================================================
//EXECUTAR METODO DO JOGADOR DENTRO DENTRO DO SCRIPT INIMIGO 
//=======================================================================
//ATGUALIZAR SCRIPT IUNIMIGO
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class inimigo : MonoBehaviour {
    GameObject jogador;
    bool marcouPonto;


	// Use this for initialization
	void Start () {

        GetComponent<Rigidbody2D>().velocity = new Vector2(-4, 0);//empurrar o inimigo para frente
        jogador = GameObject.FindGameObjectWithTag("Player");

    }
	
	// Update is called once per frame
	void Update () {
		
        if(transform.position.x < -25)
        {
            Destroy(this.gameObject);
        }
        else
        {

            //verifica se a pocisao do jogador e menor que a do inimigo
            if(transform.position.x < jogador.transform.position.x)
            {
                if (!marcouPonto)
                {
                    marcouPonto = true;
                    //velocidade aulmenta & inimigo spbe
                    GetComponent<Rigidbody2D>().velocity = new Vector2(-7.5f, 5.0f);
                    GetComponent<Rigidbody2D>().isKinematic=false;//girar o inimigo
                    GetComponent<Rigidbody2D>().AddTorque(50f);
                    GetComponent<SpriteRenderer>().color = new Color(1.0f, 0.75f, 0.75f);//mudar a cor do inimigo

                    //-- ATUALIAR ESSA LINHA --//
                    //CHMAR METODO DO SCRIPT JOGADOR
                    jogador.SendMessage("MarcarPonto");
                }
                
            }
        }
	}

}

//=======================================================================
//----------------------- FIM JOGO AVIAO ------------------------------//
//=======================================================================
